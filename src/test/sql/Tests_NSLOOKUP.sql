--#SET TERMINATOR @

/**
 * Tests for NS LOOK UP function.
 *
 * Version: 2014-08-18
 * Author: Andres Gomez Casanova (AngocA)
 * Made in COLOMBIA.
 */

SET CURRENT SCHEMA NSLOOKUP @

CREATE SCHEMA NSLOOKUP @

-- Test fixtures
CREATE OR REPLACE PROCEDURE ONE_TIME_SETUP()
 P_ONE_TIME_SETUP: BEGIN
 END P_ONE_TIME_SETUP @

CREATE OR REPLACE PROCEDURE SETUP()
 P_SETUP: BEGIN
 END P_SETUP @

CREATE OR REPLACE PROCEDURE TEAR_DOWN()
 P_TEAR_DOWN: BEGIN
 END P_TEAR_DOWN @

CREATE OR REPLACE PROCEDURE ONE_TIME_TEAR_DOWN()
 P_ONE_TIME_TEAR_DOWN: BEGIN
 END P_ONE_TIME_TEAR_DOWN @

-- Tests

-- Test to retrieve the ip of the local machine.
CREATE OR REPLACE PROCEDURE TEST_RESOLVE_LOCALHOST()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = 'localhost.localdomain';
  SET EXPECTED = '127.0.0.1';
  SET ACTUAL = NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test to retrieve the ip of the local machine.
CREATE OR REPLACE PROCEDURE TEST_RESOLVE_CERN()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = 'cern.ch';
  SET EXPECTED = '188.184.9.234';
  SET ACTUAL = NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the function with a null hostname.
CREATE OR REPLACE PROCEDURE TEST_NSLOOKUP_NULL()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = NULL;
  SET EXPECTED = NULL;
  SET ACTUAL = NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the function with an empty string.
CREATE OR REPLACE PROCEDURE TEST_NSLOOKUP_EMPTY()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = '';
  SET EXPECTED = NULL;
  SET ACTUAL = NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the function with an blank string.
CREATE OR REPLACE PROCEDURE TEST_NSLOOKUP_BLANK()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = ' ';
  SET EXPECTED = NULL;
  SET ACTUAL = NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the function with an invalid string.
CREATE OR REPLACE PROCEDURE TEST_NSLOOKUP_INVALID()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = 'I N V A l i d';
  SET EXPECTED = 'Invalid';
  SET ACTUAL = NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test to retrieve the name of the local machine.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_GOOGLE()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = '8.8.8.8';
  SET EXPECTED = 'google-public-dns-a.google.com';
  SET ACTUAL = REVERSE_NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test to retrieve the name of the local machine.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_LOCALHOST()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE IP VARCHAR(255);

  SET IP = '127.0.0.1';
  SET EXPECTED = 'localhost.localdomain';
  SET ACTUAL = REVERSE_NSLOOKUP(IP);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the reverse function with a null ip.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_NULL()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = NULL;
  SET EXPECTED = NULL;
  SET ACTUAL = REVERSE_NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the reverse function with an empty string.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_EMPTY()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = '';
  SET EXPECTED = NULL;
  SET ACTUAL = REVERSE_NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the reverse function with an blank string.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_BLANK()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = ' ';
  SET EXPECTED = NULL;
  SET ACTUAL = REVERSE_NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

-- Test the reverse function with an invalid string.
CREATE OR REPLACE PROCEDURE TEST_REVERSE_INVALID()
 BEGIN
  DECLARE EXPECTED VARCHAR(15);
  DECLARE ACTUAL VARCHAR(15);
  DECLARE HOSTNAME VARCHAR(255);

  SET HOSTNAME = 'I N V A l i d';
  SET EXPECTED = 'Invalid';
  SET ACTUAL = REVERSE_NSLOOKUP(HOSTNAME);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED, ACTUAL);
 END @

 CALL DB2UNIT.REGISTER_MESSAGE(CURRENT SCHEMA) @

